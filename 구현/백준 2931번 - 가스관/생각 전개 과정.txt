모든 배수관이 연결되어 있어야 한다!!

연결!
흐름이 있다. -> 한 방향으로만 흐른다 -> 순환X

물은 현재 방향대로만 흐른다 -> 그대로 따라가면 됨

- 초기에 생각해낸 풀이법
1. 모스크바에서 출발해서 방향대로 간다
2. Z 이전에 막히면 그 방향에 . 대신 가스관을 종류별로 둬서 이동한다.
3. 그런데도 막히면 되돌아온다
---> 틀렸지만 도움이 됐다.

1. M에서 출발해서 막히는 지점까지 간다.
2. 가스관이 있어야 하는 지점과 이동 방향 반환
3. Z에서 출발해서 막히는 지점까지 간다
4. 가스관이 있어야 하는 지점과 이동 방향 반환
예를 들어, 1)아래 방향으로 향하고 있고 (r, c)에 가스관이 없다. 2)왼쪽 방향으로 향하고 있고 (r,c)에 가스관이 없다.
==> 위와 오른쪽을 잇는 블록2가 (r,c)에 있어야 한다!
- '+'가 없어진 경우는 특별하다. ===> 빈 칸에 가스관을 놓았는데, 인접한 곳에 방문하지 않은 가스관이 있을 경우 '+'를 둔다
- 위아래(0,1) => |
- 오른왼(2,3) => -
- 위왼쪽(0,2) => 1
- 아래왼쪽(1,2)  => 2
- 아래오른쪽(1,3) => 3
- 위왼쪽(0,3) => 4

지금 위치가 어디이고 방향이 무엇이다. 어떤 가스관인지에 따라 가야할 방향이 정해진다.
- '|', '-', '+': 방향 그대로
- 1: 왼쪽 -> 아래, 위 -> 오른쪽
- 2: 아래 -> 오른쪽, 왼쪽 -> 위
- 3: 오른쪽 -> 위, 아래 -> 왼쪽
- 4: 오른쪽 -> 아래, 위 -> 왼쪽

- 전체 알고리즘
1. M,Z(시작 위치)를 찾는다
2. 시작 위치를 넣고 시뮬레이션을 돌려 (가스관을 놓을 행, 열, 방향)을 반환받는다.
3. 반환받은 두 방향에 따라 어떤 블록을 놓을지 결정한다.
4. 결과 출력

- 놓친 예외 케이스
MZ가 인접한 경우

- 배운 것
예외가 발생할 수 있는 곳에 쓰레기 값 대신 특정한 Exception을 던지면 디버깅 하기 수월해진다