-문제)
각 집에 택배를 배달하고 택배 상자를 수거한다
트럭에는 cap개 실을 수 있다.
모든 배달과 수거를 마치고 돌아올 수 있는 '최단 거리'를 구하라

-활용할 알고리즘 추측) 최단거리 => 다익스트라, 완전탐색, 효율성 고려하면 DP 활용

-전략 도출)
거리가 먼 곳을 먼저 배달/수거하는 것이 좋다. 왜? 모르겠네? 왜지?
가장 먼 곳을 배달하고 돌아오는 길에 있는, 그러면서 수거할 가장 먼 곳을 다 수거하고나면 다시 수거하러 가지 않아도 되기 때문이다.
예를 들어 7을 배달하고 오는 길에 6을 수거하는 것이다. 만약 6을 먼저 수거하고 돌아왔다가 7을 배달하러 가면
6 + 6 + 7 + 7이 되어 더 오래걸린다.

6 + 6 + 4 + 4 + 2 + 2

6 + 6 +

배달은 가는 길에 가장 먼 곳 순으로 배달한다.
수거는 가장 먼 곳을 중심으로 수거한다.
가는 길에 배달 해야 할 가장 먼 곳부터 배달하고,
돌아오는 길에 가장 먼 곳부터 수거한다.

- 구체적인 풀이
배달, 수거 포인터를 각각 둔다
두 포인터 모두 인덱스 큰 곳부터 둔다
1. 배달: 포인터에 배달한다(boxCount 감소) -> boxCount >= delivery[포인터] -> 포인터 감소 -> 배달 반복 -> boxCount == 0 OR 포인터 == -1 -> 배달 중단
2. 수거: 배달 종료 -> capacity = cap으로 초기화 -> 수거한다(capacity 감소) -> capacity >= pickups[포인터] -> 포인터 감소 -> 수거 반복 -> capacity == 0 OR 포인터 == -1 -> 수거 중단

배달/수거 1번씩을 1cycle씩 돌린다. 1cycle을 돌기 전에 먼저 max(배달포인터,수거포인터)를 이동 거리에 추가한다